version: '3.8'

services:
#  api:
#    image: cosmtrek/air
#    working_dir: /app
#    restart: always
#    ports:
#      - "${SERVER_PORT}:8080"
#    healthcheck:
#      interval: 20s
#      retries: 10
#      test: curl -s http://localhost:8080/health
#    volumes:
#      - ./:/app

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '${DOCKER_PORT_ZOOKEEPER}:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '${DOCKER_PORT_KAFKA}:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TOPIC_AUTO_CREATE: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: always
    ports:
      - '${DOCKER_PORT_KAFKAUI}:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  postgres:
    image: postgres:13.4-alpine
    environment:
      POSTGRES_DB: import
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
    volumes:
      - postgres:/var/lib/postgresql
    ports:
      - "${DOCKER_PORT_DATABASE}:5432"

  adminer:
      image: adminer
      restart: always
      ports:
        - "${DOCKER_PORT_ADMINDB}:8080"

volumes:
  postgres:
